{"ast":null,"code":"var _jsxFileName = \"/Users/mattdizon/Desktop/boilerplate-frontend-react-graphql-apollo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Spinner } from './components/Spinner';\nimport { useQuery, gql } from '@apollo/client';\nimport { map } from 'lodash';\nimport { List, Tabs, Tab } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { TokenListItem } from './components/TokenListItem/TokenListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [tokens, setTokens] = useState([]);\n  const GET_DOGS = gql`\n\t{ \n\t\ttokens(orderBy: tradeVolume orderDirection:desc, first: 5){\n\t\t\tid\n\t\t\tname\n\t\t\tsymbol\n\t\t\ttradeVolume\n\t\t}\n\t}\t\n`;\n  const {\n    data,\n    loading\n  } = useQuery(GET_DOGS);\n  const [tabValue, setTabValue] = useState(0);\n  const [selectedToken, setSelectedToken] = useState();\n  useEffect(() => {\n    if (!loading) {\n      setTokens(data.tokens);\n    }\n  }, [loading]);\n  useEffect(() => {\n    console.log(selectedToken);\n  }, [selectedToken]);\n\n  const renderList = () => /*#__PURE__*/_jsxDEV(List, {\n    children: map(tokens, token => /*#__PURE__*/_jsxDEV(TokenListItem, {\n      token: token,\n      handleClick: setSelectedToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 28\n  }, this);\n\n  const a11yProps = index => {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`\n    };\n  };\n\n  const handleChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top 5 Tokens by Trade Volume in USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }, this), renderList(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Show Chart For\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleChange,\n        \"aria-label\": \"basic tabs example\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Hourly\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Daily\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Monthly\",\n          ...a11yProps(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"bb9wEtOFjj5xIgxwxrhLqfshuE4=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mattdizon/Desktop/boilerplate-frontend-react-graphql-apollo/src/App.js"],"names":["useEffect","useState","Spinner","useQuery","gql","map","List","Tabs","Tab","Box","TokenListItem","App","tokens","setTokens","GET_DOGS","data","loading","tabValue","setTabValue","selectedToken","setSelectedToken","console","log","renderList","token","a11yProps","index","id","handleChange","event","newValue","display","flexDirection"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Spinner } from './components/Spinner';\nimport { useQuery, gql } from '@apollo/client';\nimport { map } from 'lodash'\nimport { List, Tabs, Tab } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { TokenListItem } from './components/TokenListItem/TokenListItem'\nexport const App = () => {\n\tconst [tokens, setTokens] = useState([])\n\n\tconst GET_DOGS = gql`\n\t{ \n\t\ttokens(orderBy: tradeVolume orderDirection:desc, first: 5){\n\t\t\tid\n\t\t\tname\n\t\t\tsymbol\n\t\t\ttradeVolume\n\t\t}\n\t}\t\n`;\n\tconst {data, loading} = useQuery(GET_DOGS)\n\tconst [tabValue, setTabValue] = useState(0)\n\tconst [selectedToken, setSelectedToken] = useState()\n\n\tuseEffect(() => {\n\t\tif(!loading){\n\t\t\tsetTokens(data.tokens)\n\t\t}\n\t},[loading])\n\n\tuseEffect(() => {\n\t\tconsole.log(selectedToken)\n\t},[selectedToken])\n\t\n\tconst renderList = () => (<List>\n\t\t{map(tokens, (token) => <TokenListItem token={token} handleClick={setSelectedToken}/>)}\n\t</List>)\n\n\tconst a11yProps = (index) => {\n\t\treturn {\n\t\t\tid: `simple-tab-${index}`,\n\t\t\t'aria-controls': `simple-tabpanel-${index}`,\n\t\t}\n\t}\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetTabValue(newValue);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\t!loading \n\t\t\t\t\t? <Box sx={{display: 'flex', flexDirection: 'column'}}>\n\t\t\t\t\t\t\t<h1>Top 5 Tokens by Trade Volume in USD</h1>\n\t\t\t\t\t\t\t{renderList()}\n\t\t\t\t\t\t\t<h2>Show Chart For</h2>\n\t\t\t\t\t\t\t<Tabs value={tabValue} onChange={handleChange} aria-label=\"basic tabs example\">\n\t\t\t\t\t\t\t\t<Tab label=\"Hourly\" {...a11yProps(0)} />\n\t\t\t\t\t\t\t\t<Tab label=\"Daily\" {...a11yProps(1)} />\n\t\t\t\t\t\t\t\t<Tab label=\"Monthly\" {...a11yProps(2)} />\n\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</Box>\n\t\t\t\t\t: <Spinner/>\n\t\t\t}\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * Convert an Unix timestamp in to human readable datetime (local time zone)\n * @param  {String|Number} timestamp\n * @return {String}\n */\nfunction parseUnixTimestamp(timestamp) {\n  timestamp = parseInt(timestamp);\n  const d = new Date(timestamp);\n  let month = `${d.getMonth() + 1}`;\n  let day = `${d.getDate()}`;\n  const year = d.getFullYear();\n  let hour = `${d.getHours()}`;\n  let minute = `${d.getMinutes()}`;\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  if (hour.length < 2) hour = `0${hour}`;\n  if (minute.length < 2) minute = `0${minute}`;\n  const date = [year, month, day].join('-');\n  const time = [hour, minute].join(':');\n  return `${date} ${time}`;\n}\n\nmodule.exports = {\n  parseUnixTimestamp\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/boilerplate-frontend-react-graphql-apollo/src/utils/utils.js"],"names":["parseUnixTimestamp","timestamp","parseInt","d","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","length","date","join","time","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAT,CAA4BC,SAA5B,EAAuC;AACtCA,EAAAA,SAAS,GAAGC,QAAQ,CAACD,SAAD,CAApB;AACA,QAAME,CAAC,GAAG,IAAIC,IAAJ,CAASH,SAAT,CAAV;AAEA,MAAII,KAAK,GAAI,GAAGF,CAAC,CAACG,QAAF,KAAe,CAAG,EAAlC;AACA,MAAIC,GAAG,GAAI,GAAEJ,CAAC,CAACK,OAAF,EAAY,EAAzB;AACA,QAAMC,IAAI,GAAGN,CAAC,CAACO,WAAF,EAAb;AACA,MAAIC,IAAI,GAAI,GAAER,CAAC,CAACS,QAAF,EAAa,EAA3B;AACA,MAAIC,MAAM,GAAI,GAAEV,CAAC,CAACW,UAAF,EAAe,EAA/B;AAEA,MAAIT,KAAK,CAACU,MAAN,GAAe,CAAnB,EAAsBV,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACtB,MAAIE,GAAG,CAACQ,MAAJ,GAAa,CAAjB,EAAoBR,GAAG,GAAI,IAAGA,GAAI,EAAd;AACpB,MAAII,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqBJ,IAAI,GAAI,IAAGA,IAAK,EAAhB;AACrB,MAAIE,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuBF,MAAM,GAAI,IAAGA,MAAO,EAApB;AAEvB,QAAMG,IAAI,GAAG,CAACP,IAAD,EAAOJ,KAAP,EAAcE,GAAd,EAAmBU,IAAnB,CAAwB,GAAxB,CAAb;AACA,QAAMC,IAAI,GAAG,CAACP,IAAD,EAAOE,MAAP,EAAeI,IAAf,CAAoB,GAApB,CAAb;AAEA,SAAQ,GAAED,IAAK,IAAGE,IAAK,EAAvB;AACA;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AAChBpB,EAAAA;AADgB,CAAjB","sourcesContent":["/**\n * Convert an Unix timestamp in to human readable datetime (local time zone)\n * @param  {String|Number} timestamp\n * @return {String}\n */\nfunction parseUnixTimestamp(timestamp) {\n\ttimestamp = parseInt(timestamp);\n\tconst d = new Date(timestamp);\n\n\tlet month = `${(d.getMonth() + 1)}`;\n\tlet day = `${d.getDate()}`;\n\tconst year = d.getFullYear();\n\tlet hour = `${d.getHours()}`;\n\tlet minute = `${d.getMinutes()}`;\n\n\tif (month.length < 2) month = `0${month}`;\n\tif (day.length < 2) day = `0${day}`;\n\tif (hour.length < 2) hour = `0${hour}`;\n\tif (minute.length < 2) minute = `0${minute}`;\n\n\tconst date = [year, month, day].join('-');\n\tconst time = [hour, minute].join(':');\n\n\treturn `${date} ${time}`;\n}\n\nmodule.exports = {\n\tparseUnixTimestamp\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mattdizon/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/GetListOfUsers.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { Spinner } from './Spinner';\nimport { ErrorAlert } from './ErrorAlert';\nimport { ListOfUsers } from './ListOfUsers';\nimport { LIST_ALL_USERS } from '../gql/queries/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GetListOfUsers = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data,\n    startPolling,\n    stopPolling\n  } = useQuery(LIST_ALL_USERS, {\n    fetchPolicy: 'no-cache'\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorAlert, {\n    errorMessage: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ListOfUsers, {\n    users: data.listAllUsers,\n    startPolling: startPolling,\n    stopPolling: stopPolling\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GetListOfUsers, \"mTBFlZApoC1ZdasSdHKsbozPtFA=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetListOfUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetListOfUsers\");","map":{"version":3,"sources":["/Users/mattdizon/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/GetListOfUsers.js"],"names":["useQuery","Spinner","ErrorAlert","ListOfUsers","LIST_ALL_USERS","GetListOfUsers","loading","error","data","startPolling","stopPolling","fetchPolicy","message","listAllUsers"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACnC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA;AAAtC,MAAsDV,QAAQ,CAACI,cAAD,EAAiB;AAAEO,IAAAA,WAAW,EAAE;AAAf,GAAjB,CAApE;AAEA,MAAIL,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,UAAD;AAAY,IAAA,YAAY,EAAEA,KAAK,CAACK;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBAAO,QAAC,WAAD;AAAa,IAAA,KAAK,EAAEJ,IAAI,CAACK,YAAzB;AAAuC,IAAA,YAAY,EAAEJ,YAArD;AAAmE,IAAA,WAAW,EAAEC;AAAhF;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAPM;;GAAML,c;UACgDL,Q;;;KADhDK,c","sourcesContent":["import { useQuery } from '@apollo/client';\n\nimport { Spinner } from './Spinner';\nimport { ErrorAlert } from './ErrorAlert';\nimport { ListOfUsers } from './ListOfUsers';\n\nimport { LIST_ALL_USERS } from '../gql/queries/users';\n\nexport const GetListOfUsers = () => {\n\tconst { loading, error, data, startPolling, stopPolling } = useQuery(LIST_ALL_USERS, { fetchPolicy: 'no-cache' });\n\n\tif (loading) return <Spinner />;\n\tif (error) return <ErrorAlert errorMessage={error.message} />;\n\n\treturn <ListOfUsers users={data.listAllUsers} startPolling={startPolling} stopPolling={stopPolling} />;\n};"]},"metadata":{},"sourceType":"module"}
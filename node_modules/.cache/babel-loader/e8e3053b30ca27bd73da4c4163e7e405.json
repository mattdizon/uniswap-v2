{"ast":null,"code":"var _jsxFileName = \"/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/LoginForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment } from 'react';\nimport { useMutation } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport { ErrorAlert } from '../ErrorAlert';\nimport { SubmitButton } from '../SubmitButton';\nimport { SubmitButtonHelper } from '../SubmitButtonHelper';\nimport { useInputValue } from '../../hooks/useInputValue';\nimport { validateLoginForm } from '../../utils/validations';\nimport { LOGIN } from '../../gql/mutations/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = _ref => {\n  _s();\n\n  let {\n    activateAuth\n  } = _ref;\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [authUser] = useMutation(LOGIN);\n  const email = useInputValue('');\n  const password = useInputValue('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsDisabled(true);\n    setIsLoading(true);\n    setError(null);\n    const variables = {\n      email: email.value,\n      password: password.value\n    };\n    authUser({\n      variables\n    }).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      const {\n        token\n      } = data.authUser;\n      activateAuth(token);\n    }).catch(e => {\n      setError(e.message);\n      setIsDisabled(false);\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-row mb-3\",\n      disabled: isDisabled,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputEmailLoginForm\",\n          className: \"text-light\",\n          children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: isDisabled,\n          inputMode: \"email\",\n          className: \"form-control\",\n          id: \"inputEmailLoginForm\",\n          placeholder: \"email\",\n          ...email,\n          required: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputPasswordLoginForm\",\n          className: \"text-light\",\n          children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: isDisabled,\n          className: \"form-control\",\n          id: \"inputPasswordLoginForm\",\n          placeholder: \"password\",\n          type: \"password\",\n          ...password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-1\",\n        children: [/*#__PURE__*/_jsxDEV(SubmitButton, {\n          disabled: isDisabled || !validateLoginForm(email.value, password.value),\n          children: !isLoading ? 'Log in' : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm mr-2\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButtonHelper, {\n          mustShowHelper: !validateLoginForm(email.value, password.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      errorMessage: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginForm, \"alT99vdaegnYHXxjsbVawFFqKDA=\", false, function () {\n  return [useMutation, useInputValue, useInputValue];\n});\n\n_c = LoginForm;\nLoginForm.propTypes = {\n  activateAuth: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/LoginForm/index.js"],"names":["useState","Fragment","useMutation","PropTypes","ErrorAlert","SubmitButton","SubmitButtonHelper","useInputValue","validateLoginForm","LOGIN","LoginForm","activateAuth","isDisabled","setIsDisabled","isLoading","setIsLoading","error","setError","authUser","email","password","handleSubmit","event","preventDefault","variables","value","then","data","token","catch","e","message","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { useState, Fragment } from 'react';\nimport { useMutation } from '@apollo/client';\nimport PropTypes from 'prop-types';\n\nimport { ErrorAlert } from '../ErrorAlert';\nimport { SubmitButton } from '../SubmitButton';\nimport { SubmitButtonHelper } from '../SubmitButtonHelper';\n\nimport { useInputValue } from '../../hooks/useInputValue';\nimport { validateLoginForm } from '../../utils/validations';\n\nimport { LOGIN } from '../../gql/mutations/auth';\n\nexport const LoginForm = ({ activateAuth }) => {\n\n\tconst [isDisabled, setIsDisabled] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst [ authUser ] = useMutation(LOGIN);\n\n\tconst email = useInputValue('');\n\tconst password = useInputValue('');\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetIsDisabled(true);\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\n\t\tconst variables = { email: email.value, password: password.value };\n\n\t\tauthUser({ variables }).then(({ data }) => {\n\t\t\tconst { token } = data.authUser;\n\t\t\tactivateAuth(token);\n\t\t}).catch(e => {\n\t\t\tsetError(e.message);\n\t\t\tsetIsDisabled(false);\n\t\t\tsetIsLoading(false);\n\t\t});\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<form className=\"form-row mb-3\" disabled={isDisabled} onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"form-group col-md-6\">\n\t\t\t\t\t<label htmlFor=\"inputEmailLoginForm\" className=\"text-light\">Email <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t<input disabled={isDisabled} inputMode=\"email\" className=\"form-control\" id=\"inputEmailLoginForm\" placeholder='email' {...email} required autoFocus />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group col-md-6\">\n\t\t\t\t\t<label htmlFor=\"inputPasswordLoginForm\" className=\"text-light\">Password <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t<input disabled={isDisabled} className=\"form-control\" id=\"inputPasswordLoginForm\" placeholder='password' type='password' {...password} required />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mt-2 ml-1\">\n\t\t\t\t\t<SubmitButton disabled={isDisabled || !validateLoginForm(email.value, password.value)}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(!isLoading)\n\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t'Log in'\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t<span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\n\t\t\t\t\t\t\t\t\t\t<span>Loading</span>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t</SubmitButton>\n\t\t\t\t\t<SubmitButtonHelper mustShowHelper={!validateLoginForm(email.value, password.value)}></SubmitButtonHelper>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{\n\t\t\t\terror && <ErrorAlert errorMessage={error} />\n\t\t\t}\n\t\t</Fragment>\n\t);\n};\n\nLoginForm.propTypes = {\n\tactivateAuth: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
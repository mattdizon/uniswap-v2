{"ast":null,"code":"var _jsxFileName = \"/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { StrictMode, useContext, Suspense, lazy, useEffect } from 'react';\nimport { Router, Redirect } from '@reach/router';\nimport { AuthContext } from './AuthContext';\nimport { Login } from './pages/Login';\nimport { Registration } from './pages/Registration';\nimport { Logout } from './pages/Logout';\nimport { Page404 } from './pages/Page404';\nimport { NavBar } from './components/NavBar';\nimport { Footer } from './components/Footer';\nimport { Spinner } from './components/Spinner';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = /*#__PURE__*/lazy(_c = () => import('./pages/Home'));\n_c2 = Home;\nconst UserAdministration = /*#__PURE__*/lazy(_c3 = () => import('./pages/UserAdministration'));\n_c4 = UserAdministration;\nexport const App = () => {\n  _s();\n\n  const {\n    isAuth\n  } = useContext(AuthContext);\n  const {\n    userData\n  } = useContext(AuthContext);\n  const GET_DOGS = gql`\n  query{\n    pairs {\n      id\n    }\n  }\n`;\n  const {\n    data,\n    loading\n  } = useQuery(GET_DOGS);\n  useEffect(() => {\n    console.log(data);\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 2\n  }, this);\n};\n\n_s(App, \"cJ29ZYV6sCvjJccZuUCo7nXPqnw=\", false, function () {\n  return [useQuery];\n});\n\n_c5 = App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Home$lazy\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"UserAdministration$lazy\");\n$RefreshReg$(_c4, \"UserAdministration\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/App.js"],"names":["StrictMode","useContext","Suspense","lazy","useEffect","Router","Redirect","AuthContext","Login","Registration","Logout","Page404","NavBar","Footer","Spinner","useQuery","gql","Home","UserAdministration","App","isAuth","userData","GET_DOGS","data","loading","console","log"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiDC,SAAjD,QAAkE,OAAlE;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AAEA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,IAAI,gBAAGd,IAAI,MAAC,MAAM,OAAO,cAAP,CAAP,CAAjB;MAAMc,I;AACN,MAAMC,kBAAkB,gBAAGf,IAAI,OAAC,MAAM,OAAO,4BAAP,CAAP,CAA/B;MAAMe,kB;AAGN,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAanB,UAAU,CAACM,WAAD,CAA7B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAepB,UAAU,CAACM,WAAD,CAA/B;AAEA,QAAMe,QAAQ,GAAGN,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANC;AAOA,QAAM;AAACO,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBT,QAAQ,CAACO,QAAD,CAAhC;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACfqB,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,GAFQ,EAEP,CAACC,OAAD,CAFO,CAAT;AAGA,sBACA;AAAA;AAAA;AAAA;AAAA,UADA;AAKA,CApBM;;GAAML,G;UAWYJ,Q;;;MAXZI,G","sourcesContent":["import { StrictMode, useContext, Suspense, lazy, useEffect } from 'react';\n\nimport { Router, Redirect } from '@reach/router';\n\nimport { AuthContext } from './AuthContext';\n\nimport { Login } from './pages/Login';\nimport { Registration } from './pages/Registration';\nimport { Logout } from './pages/Logout';\nimport { Page404 } from './pages/Page404';\n\nimport { NavBar } from './components/NavBar';\nimport { Footer } from './components/Footer';\nimport { Spinner } from './components/Spinner';\nimport { useQuery, gql } from '@apollo/client';\n\nconst Home = lazy(() => import('./pages/Home'));\nconst UserAdministration = lazy(() => import('./pages/UserAdministration'));\n\n\nexport const App = () => {\n\tconst { isAuth } = useContext(AuthContext);\n\tconst { userData } = useContext(AuthContext);\n\n\tconst GET_DOGS = gql`\n  query{\n    pairs {\n      id\n    }\n  }\n`;\n\tconst {data, loading} = useQuery(GET_DOGS)\n\tuseEffect(() => {\n\t\tconsole.log(data)\n\t},[loading])\n\treturn (\n\t<div>\n\t\t\n\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}
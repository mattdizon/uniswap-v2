{"ast":null,"code":"var _jsxFileName = \"/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/RegisterForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment } from 'react';\nimport { useMutation } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport { ErrorAlert } from '../ErrorAlert';\nimport { SubmitButton } from '../SubmitButton';\nimport { SubmitButtonHelper } from '../SubmitButtonHelper';\nimport { useInputValue } from '../../hooks/useInputValue';\nimport { validateRegisterForm } from '../../utils/validations';\nimport { REGISTER } from '../../gql/mutations/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterForm = _ref => {\n  _s();\n\n  let {\n    activateAuth\n  } = _ref;\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [registerUser] = useMutation(REGISTER);\n  const email = useInputValue('');\n  const password = useInputValue('');\n  const repeatPassword = useInputValue('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsDisabled(true);\n    setIsLoading(true);\n    setError(null);\n    const variables = {\n      email: email.value,\n      password: password.value\n    };\n    registerUser({\n      variables\n    }).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      const {\n        token\n      } = data.registerUser;\n      activateAuth(token);\n    }).catch(e => {\n      setError(e.message);\n      setIsDisabled(false);\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"col-md-8\",\n        disabled: isDisabled,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputEmailRegisterForm\",\n            className: \"text-light\",\n            children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 76\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: isDisabled,\n            inputMode: \"email\",\n            className: \"form-control\",\n            id: \"inputEmailRegisterForm\",\n            placeholder: \"email\",\n            ...email,\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            id: \"emailHelp\",\n            className: \"form-text text-muted\",\n            children: \"Make sure it's a valid email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputPasswordRegisterForm\",\n            className: \"text-light\",\n            children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 82\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: isDisabled,\n            className: \"form-control\",\n            id: \"inputPasswordRegisterForm\",\n            placeholder: \"password\",\n            type: \"password\",\n            ...password,\n            required: true,\n            pattern: \"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!*^?+-_@#$%&]{8,}$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            id: \"passwordHelp\",\n            className: \"form-text text-muted\",\n            children: \"At least 8 characters. It must contain numbers, lowercase letters and uppercase letters. The spaces are not allowed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputRepeatPasswordRegisterForm\",\n            className: \"text-light\",\n            children: [\"Repeat password \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: isDisabled,\n            className: \"form-control\",\n            id: \"inputRepeatPasswordRegisterForm\",\n            placeholder: \"repeat password\",\n            type: \"password\",\n            ...repeatPassword,\n            required: true,\n            pattern: \"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!*^?+-_@#$%&]{8,}$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            id: \"repeatPasswordHelp\",\n            className: \"form-text text-muted\",\n            children: \"At least 8 characters. It must contain numbers, lowercase letters and uppercase letters. The spaces are not allowed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 ml-1\",\n          children: [/*#__PURE__*/_jsxDEV(SubmitButton, {\n            disabled: isDisabled || !validateRegisterForm(email.value, password.value, repeatPassword.value),\n            children: !isLoading ? 'Create account' : /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm mr-2\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButtonHelper, {\n            mustShowHelper: !validateRegisterForm(email.value, password.value, repeatPassword.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n          errorMessage: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RegisterForm, \"PTbJiNAsTw+6d2JlLO3+OL+Kjd4=\", false, function () {\n  return [useMutation, useInputValue, useInputValue, useInputValue];\n});\n\n_c = RegisterForm;\nRegisterForm.propTypes = {\n  activateAuth: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/RegisterForm/index.js"],"names":["useState","Fragment","useMutation","PropTypes","ErrorAlert","SubmitButton","SubmitButtonHelper","useInputValue","validateRegisterForm","REGISTER","RegisterForm","activateAuth","isDisabled","setIsDisabled","isLoading","setIsLoading","error","setError","registerUser","email","password","repeatPassword","handleSubmit","event","preventDefault","variables","value","then","data","token","catch","e","message","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { useState, Fragment } from 'react';\nimport { useMutation } from '@apollo/client';\nimport PropTypes from 'prop-types';\n\nimport { ErrorAlert } from '../ErrorAlert';\nimport { SubmitButton } from '../SubmitButton';\nimport { SubmitButtonHelper } from '../SubmitButtonHelper';\n\nimport { useInputValue } from '../../hooks/useInputValue';\nimport { validateRegisterForm } from '../../utils/validations';\n\nimport { REGISTER } from '../../gql/mutations/auth';\n\nexport const RegisterForm = ({ activateAuth }) => {\n\n\tconst [isDisabled, setIsDisabled] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst [ registerUser ] = useMutation(REGISTER);\n\n\tconst email = useInputValue('');\n\tconst password = useInputValue('');\n\tconst repeatPassword = useInputValue('');\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetIsDisabled(true);\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\n\t\tconst variables = { email: email.value, password: password.value };\n\n\t\tregisterUser({ variables }).then(({ data }) => {\n\t\t\tconst { token } = data.registerUser;\n\t\t\tactivateAuth(token);\n\t\t}).catch(e => {\n\t\t\tsetError(e.message);\n\t\t\tsetIsDisabled(false);\n\t\t\tsetIsLoading(false);\n\t\t});\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"row justify-content-center mt-4\">\n\t\t\t\t<form className=\"col-md-8\" disabled={isDisabled} onSubmit={handleSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"inputEmailRegisterForm\" className=\"text-light\">Email <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t\tinputMode=\"email\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"inputEmailRegisterForm\"\n\t\t\t\t\t\t\tplaceholder='email'\n\t\t\t\t\t\t\t{...email}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Make sure it's a valid email address</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"inputPasswordRegisterForm\" className=\"text-light\">Password <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"inputPasswordRegisterForm\"\n\t\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t{...password}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tpattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!*^?+-_@#$%&]{8,}$\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small id=\"passwordHelp\" className=\"form-text text-muted\">At least 8 characters. It must contain numbers, lowercase letters and uppercase letters. The spaces are not allowed</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"inputRepeatPasswordRegisterForm\" className=\"text-light\">Repeat password <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"inputRepeatPasswordRegisterForm\"\n\t\t\t\t\t\t\tplaceholder='repeat password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t{...repeatPassword}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tpattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!*^?+-_@#$%&]{8,}$\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small id=\"repeatPasswordHelp\" className=\"form-text text-muted\">At least 8 characters. It must contain numbers, lowercase letters and uppercase letters. The spaces are not allowed</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mt-2 ml-1\">\n\t\t\t\t\t\t<SubmitButton disabled={isDisabled || !validateRegisterForm(email.value, password.value, repeatPassword.value)}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t(!isLoading)\n\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t'Create account'\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\n\t\t\t\t\t\t\t\t\t\t\t<span>Loading</span>\n\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</SubmitButton>\n\t\t\t\t\t\t<SubmitButtonHelper mustShowHelper={!validateRegisterForm(email.value, password.value, repeatPassword.value)}></SubmitButtonHelper>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"col-md-8\">\n\t\t\t\t{\n\t\t\t\t\terror && <ErrorAlert errorMessage={error} />\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nRegisterForm.propTypes = {\n\tactivateAuth: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/ListOfUsers/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parseUnixTimestamp } from '../../utils/utils';\nimport { EmojiGreenCheck } from '../EmojiGreenCheck';\nimport { EmojiRedCross } from '../EmojiRedCross';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListOfUsers = _ref => {\n  _s();\n\n  let {\n    users,\n    startPolling,\n    stopPolling\n  } = _ref;\n  useEffect(() => {\n    const minuteInMilliseconds = 60000;\n    const tenMinutes = minuteInMilliseconds * 10;\n    startPolling(tenMinutes);\n    return () => {\n      stopPolling();\n    };\n  }, [startPolling, stopPolling]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table text-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Is administrator?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Is active?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Registration date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Last login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.isAdmin ? /*#__PURE__*/_jsxDEV(EmojiGreenCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 32\n              }, this) : /*#__PURE__*/_jsxDEV(EmojiRedCross, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.isActive ? /*#__PURE__*/_jsxDEV(EmojiGreenCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(EmojiRedCross, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: parseUnixTimestamp(user.registrationDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: parseUnixTimestamp(user.lastLogin)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 10\n            }, this)]\n          }, user.uuid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ListOfUsers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ListOfUsers;\nListOfUsers.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    uuid: PropTypes.string.isRequired,\n    isAdmin: PropTypes.bool.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    registrationDate: PropTypes.string.isRequired,\n    lastLogin: PropTypes.string.isRequired\n  })),\n  startPolling: PropTypes.func.isRequired,\n  stopPolling: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfUsers\");","map":{"version":3,"sources":["/Users/mattd/Desktop/boilerplate-frontend-react-graphql-apollo/src/components/ListOfUsers/index.js"],"names":["useEffect","PropTypes","parseUnixTimestamp","EmojiGreenCheck","EmojiRedCross","ListOfUsers","users","startPolling","stopPolling","minuteInMilliseconds","tenMinutes","map","user","email","isAdmin","isActive","registrationDate","lastLogin","uuid","propTypes","arrayOf","shape","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { parseUnixTimestamp } from '../../utils/utils';\nimport { EmojiGreenCheck } from '../EmojiGreenCheck';\nimport { EmojiRedCross } from '../EmojiRedCross';\n\nexport const ListOfUsers = ( { users, startPolling, stopPolling } ) => {\n\n\tuseEffect(() => {\n\t\tconst minuteInMilliseconds = 60000;\n\t\tconst tenMinutes = minuteInMilliseconds * 10;\n\t\tstartPolling(tenMinutes);\n\n\t\treturn () => {\n\t\t  stopPolling();\n\t\t};\n\t}, [startPolling, stopPolling]);\n\n\treturn (\n\t\t<section className=\"table-responsive\">\n\t\t\t<table className=\"table text-light\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\">Email</th>\n\t\t\t\t\t\t<th scope=\"col\">Is administrator?</th>\n\t\t\t\t\t\t<th scope=\"col\">Is active?</th>\n\t\t\t\t\t\t<th scope=\"col\">Registration date</th>\n\t\t\t\t\t\t<th scope=\"col\">Last login</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n  \t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tusers.map(user => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr key={user.uuid}>\n\t\t\t\t\t\t\t\t\t<td>{user.email}</td>\n\t\t\t\t\t\t\t\t\t<td>{(user.isAdmin) ? <EmojiGreenCheck /> : <EmojiRedCross /> }</td>\n\t\t\t\t\t\t\t\t\t<td>{(user.isActive) ? <EmojiGreenCheck /> : <EmojiRedCross /> }</td>\n\t\t\t\t\t\t\t\t\t<td>{parseUnixTimestamp(user.registrationDate)}</td>\n\t\t\t\t\t\t\t\t\t<td>{parseUnixTimestamp(user.lastLogin)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</section>\n\t);\n};\n\n\nListOfUsers.propTypes = {\n\tusers: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\temail: PropTypes.string.isRequired,\n\t\t\tuuid: PropTypes.string.isRequired,\n\t\t\tisAdmin: PropTypes.bool.isRequired,\n\t\t\tisActive: PropTypes.bool.isRequired,\n\t\t\tregistrationDate: PropTypes.string.isRequired,\n\t\t\tlastLogin: PropTypes.string.isRequired\n\t\t})\n\t),\n\tstartPolling: PropTypes.func.isRequired,\n\tstopPolling: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}